plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdk rootProject.compileSdkVersion
    defaultConfig {
        applicationId "md.absa.makeup.challenge"
        minSdk rootProject.minSdkVersion
        targetSdk rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "md.absa.makeup.challenge.HiltTestRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += ["-Xopt-in=kotlin.RequiresOptIn"]
    }
    buildFeatures {
        viewBinding true
    }
    packagingOptions {
//        exclude 'META-INF/DEPENDENCIES'
//        exclude 'META-INF/LICENSE'
//        exclude 'META-INF/LICENSE.txt'
//        exclude 'META-INF/license.txt'
//        exclude 'META-INF/NOTICE'
//        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/AL2.0'
    }
}

dependencies {

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines"
    implementation "androidx.appcompat:appcompat:$supportLibVersion"
    implementation "androidx.recyclerview:recyclerview:$recyclerViewVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
    implementation "com.google.android.material:material:$materialVersion"

    // architecture components
    implementation "androidx.core:core-ktx:$coreVersion"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycleVersion"
    implementation "androidx.room:room-runtime:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    implementation "androidx.paging:paging-runtime-ktx:$pagingVersion"
    implementation 'androidx.test.ext:junit-ktx:1.1.3'
    kapt "androidx.room:room-compiler:$roomVersion"

    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-runtime-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"
    implementation "androidx.work:work-runtime-ktx:$workVersion"

    implementation "androidx.datastore:datastore-preferences:$preferencesDatastore"


    // kotlin extensions
    implementation 'androidx.activity:activity-ktx:1.4.0'
    implementation 'androidx.fragment:fragment-ktx:1.4.1'

    // retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:retrofit-mock:$retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpLoggingInterceptorVersion"

    // dagger Hilt
    implementation "com.google.dagger:hilt-android:$hiltVersion"
    kapt "com.google.dagger:hilt-android-compiler:$hiltVersion"

    implementation 'androidx.hilt:hilt-work:1.0.0'
    kapt 'androidx.hilt:hilt-compiler:1.0.0'

    // coil
    implementation "io.coil-kt:coil:$coilVersion"

    // timber
    implementation "com.jakewharton.timber:timber:$timberVersion"




    //Leak Canary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.7'

    //Chucker
    debugImplementation "com.github.chuckerteam.chucker:library:3.5.2"
    releaseImplementation "com.github.chuckerteam.chucker:library-no-op:3.5.2"

    //Stetho
    implementation 'com.facebook.stetho:stetho:1.5.1'
    implementation 'com.facebook.stetho:stetho-okhttp3:1.5.1'

    /**
     * Local unit tests
     */
    testImplementation 'junit:junit:4.12'
    //Googles Truth Assertion
    testImplementation "com.google.truth:truth:1.1.3"
    //For InstantTaskExecutorRule
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    //For runBlockingTest, CoroutineDispatcher etc.
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.1"
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    testImplementation "org.mockito:mockito-core:3.3.3"

    /**
     * Instrumented unit tests
     */
    androidTestImplementation 'junit:junit:4.12'
    //Googles Truth Assertion
    androidTestImplementation "com.google.truth:truth:1.1.3"
    //For InstantTaskExecutorRule
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    //For runBlockingTest, CoroutineDispatcher etc.
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.1"
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation("com.google.dagger:hilt-android-testing:2.38.1")
    kaptAndroidTest("com.google.dagger:hilt-android-compiler:2.38.1")
}
//apply from: "$project.rootDir/jacoco.gradle"